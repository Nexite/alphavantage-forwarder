generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Symbol {
  id                   String                 @id
  calls                DailyOptionCall[]
  puts                 DailyOptionPut[]
  dailyOptions         DailyOptionsChain[]
  dailyQuotes          DailyQuote[]
  IntervalOptionCall   IntervalOptionCall[]
  IntervalOptionPut    IntervalOptionPut[]
  IntervalOptionsChain IntervalOptionsChain[]
}

model DailyQuote {
  symbolId String
  price    Decimal
  date     DateTime @db.Date
  symbol   Symbol   @relation(fields: [symbolId], references: [id])

  @@id([symbolId, date])
  @@index([date])
}

model DailyOptionsChain {
  symbolId String
  date     DateTime          @db.Date
  calls    DailyOptionCall[]
  puts     DailyOptionPut[]
  symbol   Symbol            @relation(fields: [symbolId], references: [id])

  @@id([symbolId, date])
  @@index([date])
}

model DailyOptionPut {
  contractId        String
  date              DateTime          @db.Date
  symbolId          String
  expiration        DateTime          @db.Date
  strike            Decimal
  last              Decimal
  mark              Decimal
  bid               Decimal
  bidSize           Int
  ask               Decimal
  askSize           Int
  volume            Int
  openInterest      Int
  impliedVolatility Decimal
  delta             Decimal
  gamma             Decimal
  theta             Decimal
  vega              Decimal
  rho               Decimal
  chain             DailyOptionsChain @relation(fields: [symbolId, date], references: [symbolId, date])
  symbol            Symbol            @relation(fields: [symbolId], references: [id])

  @@id([contractId, date])
  @@index([symbolId, date])
  @@index([symbolId, expiration])
}

model DailyOptionCall {
  contractId        String
  date              DateTime          @db.Date
  symbolId          String
  expiration        DateTime          @db.Date
  strike            Decimal
  last              Decimal
  mark              Decimal
  bid               Decimal
  bidSize           Int
  ask               Decimal
  askSize           Int
  volume            Int
  openInterest      Int
  impliedVolatility Decimal
  delta             Decimal
  gamma             Decimal
  theta             Decimal
  vega              Decimal
  rho               Decimal
  chain             DailyOptionsChain @relation(fields: [symbolId, date], references: [symbolId, date])
  symbol            Symbol            @relation(fields: [symbolId], references: [id])

  @@id([contractId, date])
  @@index([symbolId, date])
  @@index([symbolId, expiration])
}

model IntervalOptionsChain {
  symbolId  String
  timestamp DateTime
  calls     IntervalOptionCall[]
  puts      IntervalOptionPut[]
  symbol    Symbol               @relation(fields: [symbolId], references: [id])

  @@id([symbolId, timestamp])
}

model IntervalOptionPut {
  contractId   String
  timestamp    DateTime
  symbolId     String
  expiration   DateTime             @db.Date
  strike       Decimal
  last         Decimal
  mark         Decimal
  bid          Decimal
  bidSize      Int
  ask          Decimal
  askSize      Int
  volume       Int
  openInterest Int
  symbol       Symbol               @relation(fields: [symbolId], references: [id])
  chain        IntervalOptionsChain @relation(fields: [symbolId, timestamp], references: [symbolId, timestamp])

  @@id([contractId, timestamp])
  @@index([symbolId, timestamp])
  @@index([symbolId, expiration])
}

model IntervalOptionCall {
  contractId   String
  timestamp    DateTime
  symbolId     String
  expiration   DateTime             @db.Date
  strike       Decimal
  last         Decimal
  mark         Decimal
  bid          Decimal
  bidSize      Int
  ask          Decimal
  askSize      Int
  volume       Int
  openInterest Int
  symbol       Symbol               @relation(fields: [symbolId], references: [id])
  chain        IntervalOptionsChain @relation(fields: [symbolId, timestamp], references: [symbolId, timestamp])

  @@id([contractId, timestamp])
  @@index([symbolId, timestamp])
  @@index([symbolId, expiration])
}

model Holiday {
  id   String      @id
  date DateTime    @db.Date
  type HolidayType
}

enum HolidayType {
  CLOSED
  EARLY_CLOSE
}
