generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Symbol {
  id                   String                 @id // e.g., "AAPL"
  dailyQuotes          DailyQuote[]
  dailyOptions         DailyOptionsChain[]
  calls                DailyOptionCall[]
  puts                 DailyOptionPut[]
  IntervalOptionsChain IntervalOptionsChain[]
  IntervalOptionPut    IntervalOptionPut[]
  IntervalOptionCall   IntervalOptionCall[]
}

model DailyQuote {
  symbol   Symbol   @relation(fields: [symbolId], references: [id])
  symbolId String
  price    Decimal
  date     DateTime @db.Date

  @@id([symbolId, date])
  @@index([date])
}

model DailyOptionsChain {
  symbol   Symbol            @relation(fields: [symbolId], references: [id])
  symbolId String
  date     DateTime          @db.Date
  calls    DailyOptionCall[]
  puts     DailyOptionPut[]

  @@id([symbolId, date])
  @@index([date])
}

model DailyOptionPut {
  contractId        String
  date              DateTime          @db.Date
  symbol            Symbol            @relation(fields: [symbolId], references: [id])
  symbolId          String
  chain             DailyOptionsChain @relation(fields: [symbolId, date], references: [symbolId, date])
  expiration        DateTime          @db.Date
  strike            Decimal
  last              Decimal
  mark              Decimal
  bid               Decimal
  bidSize           Int
  ask               Decimal
  askSize           Int
  volume            Int
  openInterest      Int
  impliedVolatility Decimal
  delta             Decimal
  gamma             Decimal
  theta             Decimal
  vega              Decimal
  rho               Decimal

  @@id([contractId, date])
  @@index([symbolId, expiration])
  @@index([symbolId, date, strike])
}

model DailyOptionCall {
  contractId        String
  date              DateTime          @db.Date
  symbol            Symbol            @relation(fields: [symbolId], references: [id])
  symbolId          String
  chain             DailyOptionsChain @relation(fields: [symbolId, date], references: [symbolId, date])
  expiration        DateTime          @db.Date
  strike            Decimal
  last              Decimal
  mark              Decimal
  bid               Decimal
  bidSize           Int
  ask               Decimal
  askSize           Int
  volume            Int
  openInterest      Int
  impliedVolatility Decimal
  delta             Decimal
  gamma             Decimal
  theta             Decimal
  vega              Decimal
  rho               Decimal

  @@id([contractId, date])
  @@index([symbolId, expiration])
  @@index([symbolId, date, strike])
}

model IntervalOptionsChain {
  symbol    Symbol               @relation(fields: [symbolId], references: [id])
  symbolId  String
  timestamp DateTime
  calls     IntervalOptionCall[]
  puts      IntervalOptionPut[]

  @@id([symbolId, timestamp])
  @@index([symbolId, timestamp])
}

model IntervalOptionPut {
  contractId   String
  timestamp    DateTime
  symbol       Symbol               @relation(fields: [symbolId], references: [id])
  symbolId     String
  chain        IntervalOptionsChain @relation(fields: [symbolId, timestamp], references: [symbolId, timestamp])
  expiration   DateTime             @db.Date
  strike       Decimal
  last         Decimal
  mark         Decimal
  bid          Decimal
  bidSize      Int
  ask          Decimal
  askSize      Int
  volume       Int
  openInterest Int

  @@id([contractId, timestamp])
  @@index([symbolId, expiration])
  @@index([symbolId, timestamp, strike])
}

model IntervalOptionCall {
  contractId   String
  timestamp    DateTime
  symbol       Symbol               @relation(fields: [symbolId], references: [id])
  symbolId     String
  chain        IntervalOptionsChain @relation(fields: [symbolId, timestamp], references: [symbolId, timestamp])
  expiration   DateTime             @db.Date
  strike       Decimal
  last         Decimal
  mark         Decimal
  bid          Decimal
  bidSize      Int
  ask          Decimal
  askSize      Int
  volume       Int
  openInterest Int

  @@id([contractId, timestamp])
  @@index([symbolId, expiration])
  @@index([symbolId, timestamp, strike])
}

model Holiday {
  id   String      @id // format: "{yyyy}-{MM}-{dd}"
  date DateTime    @db.Date
  type HolidayType
}

enum HolidayType {
  CLOSED
  EARLY_CLOSE
}
